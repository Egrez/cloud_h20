# Generated by Django 3.2.16 on 2023-06-05 06:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(help_text="Enter Device's Location", max_length=50)),
                ('tunnel', models.CharField(max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServerData',
            fields=[
                ('response_id', models.CharField(help_text="Enter Response's ID", max_length=20, primary_key=True, serialize=False)),
                ('expert_id', models.CharField(help_text="Enter Expert's ID", max_length=20)),
                ('destination_device', models.CharField(help_text="Enter Destination Device's Name", max_length=20)),
                ('is_unsafe', models.BooleanField(default=False, help_text='True if the water is contaminated')),
                ('valve_shutoff', models.BooleanField(default=False, help_text='True if the water is contaminated')),
            ],
            options={
                'ordering': ['response_id', 'destination_device', 'is_unsafe'],
            },
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('tds', models.FloatField(help_text='Sensor Reading for TDS')),
                ('temp', models.FloatField(help_text='Sensor Reading for temperature')),
                ('pH', models.FloatField(help_text='Sensor Reading for pH Level')),
                ('device_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.sensor')),
            ],
            options={
                'ordering': ['device_id', '-timestamp'],
            },
        ),
    ]
